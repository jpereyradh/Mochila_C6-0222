a. ¿Quién inventó el sistema de control de versión Git y por qué?

En 2005 Git fue diseñado por Linus Torvalds, quien es un ingeniero de software finlandés-estadounidense,​ conocido por iniciar y mantener el desarrollo de Linux. Creó GIT para tener registro de los cambios en archivos, incluyendo coordinar el trabajo que varias personas realizan sobre archivos compartidos en un repositorio. Brindar eficiencia, confiabilidad y compatibilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran número de archivos de código fuente fueron sus objetivos principales.
Muchos de los desarrolladores, hace más de una década atrás, con GIT descubrieron qué era eso de utilizar un sistema de control de versiones distribuido y cómo el no depender de un repositorio central quitaba la presión de tener que estar todo el tiempo actualizando el código con lo hecho por el resto de compañeros. La facilidad de crear ramas de desarrollo dejaba alternar entre escribir comandos nuevos o corregir errores en cuestión de segundos sin tener que depender de la lentitud de un reposito central.
Antes, crear commits no era tan fácil. Con la aparición de GIT el trabajo en equipo se facilitó y hubo más organización. Entre otras palabras, Torvalds diseñó un motor de control de código llamado Git con el propósito de tener un sistema descentralizado que le permitiera trabajar de la forma que las herramientas del momento no le permitían.

b. ¿A quién pertenece actualmente Github y por qué?

2. GitHub no rendía beneficios en comparación las inversiones que ha ido recibiendo. Al principio, cuando el dinero provenía de sus tres fundadores el resultado anual era positivo, pero las alarmas saltaron cuando GitHub, para seguir creciendo y protegerse de sus competidores, necesitaba 66 millones de dólares en 9 meses. Por ello, la solución al problema fue venderla. Y Microsoft la compró: 7.500 dólares.
Desde el 2006 hasta finales del 2017, CodePlex fue el repositorio de código público creado y sostenido por Microsoft pero, ante el gran éxito de GIT y GitHub, CodePlex cerró. Microsoft reconoció y se rindió ante la realidad de que la combinación de Git + GitHub era imbatible y había sido la elegida por la comunidad para gestionar el código.
Microsoft aprovechó los problemas ecónomicos que pasaba GitHub y se adelantó a Google, quién se dice que estaba interesado en GitHub también. 
Microsoft ha adoptado una estrategia nueva, mucho más abierta al mundo del software libre y a la integración con otras plataformas otras plataformas y servicios.

c. ¿Hay otra forma que no sea la terminal para trabajar con Github?

3. Si, las hay. Una forma puede ser tener la aplicación de GitHub en la computadora y  realizar todos los movimientos, sincronizaciones y cambios, desde la interfaz del usuario, sin necesidad de escribir códigos en la Terminal.


